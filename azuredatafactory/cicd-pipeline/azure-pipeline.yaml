trigger: none
#  branches:
#    include:
#    - main
#  paths:
#    include:
#    - azuredatafactory
    
pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    displayName: 'Build Artifacts'
    variables:
      - group: 'ADF-Dev-Env'
      - name: workingDir
        value: $(Build.Repository.LocalPath)/azuredatafactory/src
    jobs:
      - job:
        steps:
        # install node
        - task: NodeTool@0
          inputs:
            versionSpec: '14.x'
          displayName: 'Install Node.js'

        # install npm packages
        - task: Npm@1
          inputs:
            command: 'install'
            verbose: true
            workingDir: '$(workingDir)'
          displayName: 'Install npm package'

        # validating artifacts
        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run publish validate $(workingDir) /subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroupName)/providers/Microsoft.DataFactory/factories/$(dataFactoryName)'
            workingDir: '$(workingDir)'
          displayName: 'Validate'

        # generating arm templates from source code
        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run publish export $(workingDir) /subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroupName)/providers/Microsoft.DataFactory/factories/$(dataFactoryName) artifacts'
            workingDir: '$(workingDir)'
          displayName: 'Generate ARM template'

        # adding arm template files to artifacts
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(workingDir)/artifacts'
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)/ARMTemplateOutput' 
          displayName: 'Copying application artifact'

        # adding arm template parameter files to artifacts
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(Build.Repository.LocalPath)/azuredatafactory/cicd-pipeline'
            Contents: '*.json'
            TargetFolder: '$(build.artifactstagingdirectory)/ARMTemplateOutput' 
          displayName: 'Copying CICD ARM Template Parameter Files'

        # publishing artifacts
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(build.artifactstagingdirectory)'
            artifact: 'datafactory'
            publishLocation: 'pipeline'

  - stage: 'development'
    displayName: 'Development deploy'
    variables:
      - group: 'ADF-Dev-Env'
      - name: serviceConnection
        value: 'ADF Deployment Service Connection'
    dependsOn: build
    jobs: 
    - deployment: DeployToDevelopment
      pool:
        vmImage: 'windows-latest'
      environment: development 
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                inputs:
                  source: 'current'
                  path: '$(Pipeline.Workspace)'

              - task: AzureResourceManagerTemplateDeployment@3
                displayName: 'Deploying ADF Artificats'
                inputs:
                  deploymentScope: 'Resource Group'
                  azureResourceManagerConnection: '${{variables.serviceConnection}}'
                  subscriptionId: $(subscriptionId)
                  action: 'Create Or Update Resource Group'
                  resourceGroupName: '$(resourceGroupName)'
                  location: 'eastus'
                  templateLocation: 'Linked artifact'
                  csmFile: '$(Pipeline.Workspace)/datafactory/ARMTemplateOutput/ARMTemplateForFactory.json'
                  csmParametersFile: '$(Pipeline.Workspace)/datafactory/ARMTemplateOutput/ARMTemplateParametersForFactory.json'
                  overrideParameters: -factoryName $(dataFactoryName) -LS_ABLB_Storage_Demo_secretName $(blobStorageSecretName) -LS_AKV_Storage_Demo_baseUrl $(keyVaultBaseUrl)
                  deploymentMode: 'Incremental'

  - stage: 'staging'
    displayName: 'Staging deploy'
    dependsOn: development
    variables:
      - group: 'ADF-Staging-Env'
      - name: serviceConnection
        value: 'ADF Deployment Service Connection'
    jobs: 
    - deployment: DeployToStaging
      pool:
        vmImage: 'windows-latest'
      environment: staging 
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                inputs:
                  source: 'current'
                  path: '$(Pipeline.Workspace)'
              - task: AzureResourceManagerTemplateDeployment@3
                displayName: 'Deploying ADF Artificats'
                inputs:
                  deploymentScope: 'Resource Group'
                  azureResourceManagerConnection: '${{variables.serviceConnection}}'
                  subscriptionId: $(subscriptionId)
                  action: 'Create Or Update Resource Group'
                  resourceGroupName: '$(resourceGroupName)'
                  location: 'eastus'
                  templateLocation: 'Linked artifact'
                  csmFile: '$(Pipeline.Workspace)/datafactory/ARMTemplateOutput/ARMTemplateForFactory.json'
                  csmParametersFile: '$(Pipeline.Workspace)/datafactory/ARMTemplateOutput/ARMTemplateParametersForFactory.json'
                  overrideParameters: -factoryName $(dataFactoryName) -LS_ABLB_Storage_Demo_secretName $(blobStorageSecretName) -LS_AKV_Storage_Demo_baseUrl $(keyVaultBaseUrl)
                  deploymentMode: 'Incremental'

  - stage: prod
    displayName: Production deploy
    dependsOn: staging
    variables:
      - group: 'ADF-Prod-Env'
      - name: serviceConnection
        value: 'ADF Deployment Service Connection'
    jobs: 
    - deployment: DeployToProd
      pool:
        vmImage: windows-latest
      environment: production
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
                inputs:
                  source: 'current'
                  path: '$(Pipeline.Workspace)'
              
              - task: AzureResourceManagerTemplateDeployment@3
                displayName: 'Deploying ADF Artificats'
                inputs:
                  deploymentScope: 'Resource Group'
                  azureResourceManagerConnection: '${{variables.serviceConnection}}'
                  subscriptionId: $(subscriptionId)
                  action: 'Create Or Update Resource Group'
                  resourceGroupName: '$(resourceGroupName)'
                  location: 'eastus'
                  templateLocation: 'Linked artifact'
                  csmFile: '$(Pipeline.Workspace)/datafactory/ARMTemplateOutput/ARMTemplateForFactory.json'
                  csmParametersFile: '$(Pipeline.Workspace)/datafactory/ARMTemplateOutput/ARMTemplateParametersForFactory.json'
                  overrideParameters: -factoryName $(dataFactoryName) -LS_ABLB_Storage_Demo_secretName $(blobStorageSecretName) -LS_AKV_Storage_Demo_baseUrl $(keyVaultBaseUrl)
                  deploymentMode: 'Incremental'